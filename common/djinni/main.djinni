user = record {
    login: string;
    id: i32;
    avatar_url: string;
    created_at: date;
}

repo = record {
    id: i32;
    name: string;
    full_name: string;
    owner: user;
    priv: bool;
    html_url: string;
    descr: string;
    created_at: date;
    updated_at: date;
    pushed_at: date;
}

get_users_cb = interface +j +c {
    on_success(users : list<user>);
    on_error(error: string);
}

get_repos_cb = interface +j +c {
    on_success(repos : list<repo>, u: user);
    on_error(error: string);
}

xptuto = interface +c {
    static make_instance(client: http_client) : xptuto;

    get_users(cb : get_users_cb);

    get_repos_for_user(cb: get_repos_cb);
}

http_response = record {
    body: optional<string>;
    code: i32;
}

http_callback = interface +c {

    on_failure(reason: string);

    on_response(response: http_response);

}

http_client = interface +j +c {
    get(url: string, callback: http_callback);
}