// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#include "native_xptuto.hpp"  // my header
#include "Marshal.hpp"
#include "native_get_repos_cb.hpp"
#include "native_get_user_cb.hpp"
#include "native_get_users_cb.hpp"
#include "native_http_client.hpp"
#include "native_platform_threads.hpp"
#include "native_user.hpp"

namespace djinni_generated {

NativeXptuto::NativeXptuto() : ::djinni::JniInterface<::xptuto::Xptuto, NativeXptuto>("org/example/xptuto/Xptuto$CppProxy") {}

NativeXptuto::~NativeXptuto() = default;


CJNIEXPORT void JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::xptuto::Xptuto>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_makeInstance(JNIEnv* jniEnv, jobject /*this*/, jobject j_client, jobject j_threads)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::xptuto::Xptuto::make_instance(::djinni_generated::NativeHttpClient::toCpp(jniEnv, j_client),
                                                 ::djinni_generated::NativePlatformThreads::toCpp(jniEnv, j_threads));
        return ::djinni::release(::djinni_generated::NativeXptuto::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_native_1getUser(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_login, jobject j_cb)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::xptuto::Xptuto>(nativeRef);
        ref->get_user(::djinni::String::toCpp(jniEnv, j_login),
                      ::djinni_generated::NativeGetUserCb::toCpp(jniEnv, j_cb));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_native_1getUsers(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_cb)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::xptuto::Xptuto>(nativeRef);
        ref->get_users(::djinni_generated::NativeGetUsersCb::toCpp(jniEnv, j_cb));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_native_1getReposForUser(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_usr, jobject j_cb)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::xptuto::Xptuto>(nativeRef);
        ref->get_repos_for_user(::djinni_generated::NativeUser::toCpp(jniEnv, j_usr),
                                ::djinni_generated::NativeGetReposCb::toCpp(jniEnv, j_cb));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
