// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

#include "native_xptuto.hpp"  // my header
#include "Marshal.hpp"
#include "native_repo.hpp"
#include "native_user.hpp"

namespace djinni_generated {

NativeXptuto::NativeXptuto() : ::djinni::JniInterface<::xptuto::Xptuto, NativeXptuto>("org/example/xptuto/Xptuto$CppProxy") {}

NativeXptuto::~NativeXptuto() = default;


CJNIEXPORT void JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::xptuto::Xptuto>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_makeInstance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::xptuto::Xptuto::make_instance();
        return ::djinni::release(::djinni_generated::NativeXptuto::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_native_1getUsers(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::xptuto::Xptuto>(nativeRef);
        auto r = ref->get_users();
        return ::djinni::release(::djinni::List<::djinni_generated::NativeUser>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_org_example_xptuto_Xptuto_00024CppProxy_native_1getReposForUser(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_u)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::xptuto::Xptuto>(nativeRef);
        auto r = ref->get_repos_for_user(::djinni_generated::NativeUser::toCpp(jniEnv, j_u));
        return ::djinni::release(::djinni::List<::djinni_generated::NativeRepo>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
