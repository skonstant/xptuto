// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

package org.example.xptuto;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Xptuto {
    public abstract ArrayList<User> getUsers();

    public abstract ArrayList<Repo> getReposForUser(User u);

    public static Xptuto makeInstance()
    {
        return CppProxy.makeInstance();
    }

    private static final class CppProxy extends Xptuto
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public ArrayList<User> getUsers()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getUsers(this.nativeRef);
        }
        private native ArrayList<User> native_getUsers(long _nativeRef);

        @Override
        public ArrayList<Repo> getReposForUser(User u)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getReposForUser(this.nativeRef, u);
        }
        private native ArrayList<Repo> native_getReposForUser(long _nativeRef, User u);

        public static native Xptuto makeInstance();
    }
}
