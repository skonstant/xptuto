// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from main.djinni

package org.example.xptuto;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Xptuto {
    public abstract void getUser(String login, GetUserCb cb);

    public abstract void getUsers(GetUsersCb cb);

    public abstract void getReposForUser(User usr, GetReposCb cb);

    public abstract void getReposForUserName(String username, GetReposCb cb);

    public static Xptuto makeInstance(HttpClient client, PlatformThreads threads)
    {
        return CppProxy.makeInstance(client,
                                     threads);
    }

    private static final class CppProxy extends Xptuto
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public void getUser(String login, GetUserCb cb)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getUser(this.nativeRef, login, cb);
        }
        private native void native_getUser(long _nativeRef, String login, GetUserCb cb);

        @Override
        public void getUsers(GetUsersCb cb)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getUsers(this.nativeRef, cb);
        }
        private native void native_getUsers(long _nativeRef, GetUsersCb cb);

        @Override
        public void getReposForUser(User usr, GetReposCb cb)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getReposForUser(this.nativeRef, usr, cb);
        }
        private native void native_getReposForUser(long _nativeRef, User usr, GetReposCb cb);

        @Override
        public void getReposForUserName(String username, GetReposCb cb)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getReposForUserName(this.nativeRef, username, cb);
        }
        private native void native_getReposForUserName(long _nativeRef, String username, GetReposCb cb);

        public static native Xptuto makeInstance(HttpClient client, PlatformThreads threads);
    }
}
